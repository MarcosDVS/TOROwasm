@page "/user/crear"
@page "/user/editar/{Id:int}"

<MenuDisplay />

<EditForm Model="@User" OnValidSubmit="Send">
<h1>@Titulo</h1>
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group">       
        <label for="">Nombre</label>
        <InputText class="form-control" @bind-Value="User.Name"></InputText>
    </div>
    <div class="form-group">
        <label>Correo</label>   
        <InputText @bind-Value="User.Nickname"/>
    </div>
    <div class="form-group">
        <label>Password</label>
        <InputText @bind-Value="User.Password"/>
    </div>
    <div class="form-group"> 
        <label>Id/Rol</label>      
        <InputNumber @bind-Value="User.UsuarioRolId"/> 
    </div>

    <button type="submit" class="mt-2 btn btn-success">OK</button>
</EditForm>

@code
{
    [Parameter]
    public int Id { get; set; } = 0;

    public string Titulo => Id>0? "Editar Usuario":"Crear Usuario";
    public UsuarioUpdateRequest User { get; set; } = new UsuarioUpdateRequest();

        protected override async Task OnInitializedAsync()
        {
            if(Id!=0)
            {
                var resultado = await userManager.GetByIdAsync(Id);
                if(resultado.Succeeded)
                {
                    User.Id = resultado.Data.Id;
                    User.Name = resultado.Data.Name;
                    User.Nickname = resultado.Data.Nickname;
                    User.Password = resultado.Data.Password;

                    StateHasChanged();
                }
            }
        }
    
    public async void Send()
    {
        var resultado = await userManager.CreateAsync(User);

        if(resultado.Succeeded) urlHelper.NavigateTo("/user");
    }
}